/**
 * üé• G√©n√©ration vid√©o Z√âNA via l'API D-ID
 * Utilise ta cl√© API personnelle : c2FidWxsZWxhbUBnbWFpbC5jb20:3SJA1zel0r5bv4JqgNads
 *
 * ‚ö†Ô∏è Ne partage pas cette cl√© publiquement.
 * Pour plus de s√©curit√©, d√©place-la dans un fichier .env :
 * VITE_DID_API_KEY="c2FidWxsZWxhbUBnbWFpbC5jb20:3SJA1zel0r5bv4JqgNads"
 */

const API_KEY = import.meta.env.VITE_DID_API_KEY || "c2FidWxsZWxhbUBnbWFpbC5jb20:3SJA1zel0r5bv4JqgNads";

/**
 * G√©n√®re une vid√©o anim√©e √† partir d‚Äôun texte.
 * Retourne l‚ÄôURL du MP4 h√©berg√© par D-ID.
 */
export async function generateZenaVideo(text: string): Promise<string | null> {
  try {
    console.log("üé¨ G√©n√©ration vid√©o Z√âNA...");

    const response = await fetch("https://api.d-id.com/talks", {
      method: "POST",
      headers: {
        Authorization: `Basic ${btoa(API_KEY)}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        source_url: "https://qvtbox.com/images/zena-face.png", // ton avatar (image fixe)
        script: {
          type: "text",
          input: text,
          provider: {
            type: "elevenlabs",
            voice_id: "Rachel", // voix r√©aliste FR
          },
        },
        config: {
          result_format: "mp4",
          stitch: true,
        },
      }),
    });

    if (!response.ok) {
      const msg = await response.text();
      throw new Error(`Erreur D-ID (${response.status}): ${msg}`);
    }

    const data = await response.json();
    console.log("‚úÖ R√©ponse D-ID :", data);

    // R√©cup√©ration de la vid√©o finale
    const videoUrl = data.result_url || data?.result?.url || null;
    if (!videoUrl) {
      console.warn("‚ö†Ô∏è Aucune URL de vid√©o retourn√©e :", data);
      return null;
    }

    console.log("üéûÔ∏è Vid√©o Z√âNA pr√™te :", videoUrl);
    return videoUrl;
  } catch (err) {
    console.error("‚ùå Erreur g√©n√©ration vid√©o Z√âNA :", err);
    return null;
  }
}
